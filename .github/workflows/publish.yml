name: Main - Build, Test & Pack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Pull & update submodule recursively
      run: |
        git submodule update --init --recursive
        git submodule update --recursive --remote
    - name: Restore submodule dependencies
      run: dotnet restore Radarr/src/Radarr.sln
    - name: Restore dependencies
      run: dotnet restore
    - name: Update project version
      uses: roryprimrose/set-vs-sdk-project-version@v1
      with:
        version: 1.0.0.${{ github.run_number }}
    - name: Update integration tests appsettings.json
      uses: microsoft/variable-substitution@v1 
      with:
          files: 'RadarrApiWrapper.IntegrationTests/appsettings.json'
      env:
          ApiBaseUrl: ${{ secrets.APIBASEURL }}
          ApiKey: ${{ secrets.APIKEY }}
    - name: Build submodule
      run: dotnet build Radarr/src/Radarr.sln --no-restore
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Test
      run: dotnet test -c Release --no-build --verbosity normal
    - name: Pack
      run: dotnet pack RadarrApiWrapper/RadarrApiWrapper.csproj -c Release --no-build --no-restore  --output nuget-packages
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: assets-for-download
        path: nuget-packages/RadarrApiWrapper.1.0.0.${{ github.run_number }}.nupkg
    - name: Push to nuget.org
      run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
    - name: Create tag
      uses: actions/github-script@v3
      with:
        github-token: ${{ github.token }}
        script: |
          github.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/1.0.0.${{ github.run_number }}",
            sha: context.sha
          })
